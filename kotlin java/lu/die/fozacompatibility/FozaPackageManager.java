//// Decompiled by Jadx - 807ms//package lu.die.fozacompatibility;import android.content.ComponentName;import android.content.Intent;import android.content.pm.ActivityInfo;import android.content.pm.ApplicationInfo;import android.content.pm.PackageInfo;import android.content.pm.ResolveInfo;import java.io.File;import java.util.ArrayList;import java.util.Arrays;import java.util.Collections;import java.util.List;import lu.die.foza.SleepyFox.ࡠ;import lu.die.foza.SleepyFox.ࢰ;public class FozaPackageManager {    public static final FozaPackageManager Ϳ = new FozaPackageManager();    public static FozaPackageManager get() {        return Ϳ;    }    public static boolean Ϳ(String str) {        char charAt;        int length = str.length();        do {            length--;            if (length < 0) {                return true;            }            charAt = str.charAt(length);            if (charAt < '0') {                break;            }        } while (charAt <= '9');        return false;    }    public void acquireObtainAppSplash() {        ࡠ.ԭ().ՠ();    }    public void acquireReleaseAppSplash() {        ࡠ.ԭ().ֈ();    }    public void cleanPackageDataAsUser(String str, int i) {        ࡠ.ԭ().Ԩ(str, String.valueOf(i));    }    public void createEmptyUser(String str, int i) {        try {            if (Arrays.binarySearch(getInstalledUserId(str), i) < 0) {                createEmptyUser(str, String.valueOf(i));            }        } catch (Exception e) {        }    }    public void createEmptyUserById(String str) {        try {            int i = 0;            while (Arrays.binarySearch(getInstalledUserId(str), i) >= 0) {                i++;            }            createEmptyUser(str, String.valueOf(i));        } catch (Exception e) {        }    }    public void deleteAllAppCache() {        ࡠ.ԭ().Ԭ();    }    public void deleteAppCache(String str) {        ࡠ.ԭ().Ϳ(str);    }    public File getAppExternalDirLocked(String str) {        try {            return ࢰ.Ϳ(str);        } catch (Exception e) {            e.printStackTrace();            return null;        }    }    public ApplicationInfo getApplicationInfo(String str) {        return ࡠ.ԭ().Ϳ(str, 0);    }    public PackageInfo getInnerAppPackageInfo(String str, int i) {        return ࡠ.ԭ().Ԩ(str, i);    }    public List<PackageInfo> getInstalledInnerApps() {        return ࡠ.ԭ().Ԯ();    }    public int[] getInstalledUserId(String str) {        try {            ArrayList arrayList = new ArrayList();            String[] installedUserName = getInstalledUserName(str);            if (installedUserName != null) {                for (String str2 : installedUserName) {                    if (Ϳ(str2)) {                        arrayList.add(Integer.valueOf(str2));                    }                }            }            Collections.sort(arrayList);            int size = arrayList.size();            int[] iArr = new int[size];            for (int i = 0; i < arrayList.size(); i++) {                iArr[i] = ((Integer) arrayList.get(i)).intValue();            }            if (size != 0) {                return iArr;            }            int[] iArr2 = new int[1];            iArr2[0] = 0;            return iArr2;        } catch (Exception e) {            return new int[0];        }    }    public String[] getInstalledUserName(String str) {        return ࡠ.ԭ().ԫ(str);    }    public Intent getLaunchIntent(String str, int i) {        List list;        Intent intent = new Intent("android.intent.action.MAIN");        intent.addCategory("android.intent.category.INFO");        intent.setPackage(str);        List list2 = ࡠ.ԭ().Ϳ(intent, (String) null, 131072);        if (list2 == null || list2.size() <= 0) {            intent.removeCategory("android.intent.category.INFO");            intent.addCategory("android.intent.category.LAUNCHER");            intent.setPackage(str);            list = ࡠ.ԭ().Ϳ(intent, (String) null, 131072);        } else {            list = list2;        }        if (list == null || list.size() <= 0) {            return null;        }        Intent intent2 = new Intent(intent);        intent2.setFlags(0x10000000);        intent2.setClassName(((ResolveInfo) list.get(0)).activityInfo.packageName, ((ResolveInfo) list.get(0)).activityInfo.name);        return intent2;    }    public Intent getLaunchIntentForPackage(Intent intent) {        ActivityInfo activityInfo = ࡠ.ԭ().Ϳ(intent);        Intent intent2 = new Intent();        if (activityInfo != null) {            intent2.setComponent(new ComponentName(activityInfo.packageName, activityInfo.name));            intent2.setAction("android.intent.action.MAIN");        }        return intent2;    }    public PackageInfo getPackageInfo(String str) {        return ࡠ.ԭ().Ԩ(str, 0);    }    public ActivityInfo getReceiverInfo(ComponentName componentName) {        return ࡠ.ԭ().ԩ(componentName, 0);    }    public void invalidCacheAndRestart() {        ࡠ.ԭ().ԯ();    }    public boolean isAppInstalledAsInternal(String str) {        return ࡠ.ԭ().Ԯ(str);    }    public boolean isAppSplashExists(String str) {        return ࡠ.ԭ().ՠ(str);    }    public boolean isInnerAppInstalled(String str) {        return ࡠ.ԭ().ԯ(str);    }    public List<ResolveInfo> queryIntentActivities(Intent intent, String str, int i, int i2) {        return ࡠ.ԭ().Ϳ(intent, str, i);    }    public List<ResolveInfo> queryIntentProviders(Intent intent, String str, int i, int i2) {        return ࡠ.ԭ().Ԩ(intent, str, i);    }    public List<ResolveInfo> queryIntentReceivers(Intent intent, String str, int i, int i2) {        return ࡠ.ԭ().ԩ(intent, str, i);    }    public List<ResolveInfo> queryIntentServices(Intent intent, String str, int i, int i2) {        return ࡠ.ԭ().Ԫ(intent, str, i);    }    public ActivityInfo resolveActivityInfo(ComponentName componentName, int i) {        return ࡠ.ԭ().Ϳ(componentName, 0);    }    public ActivityInfo resolveIntentActivity(Intent intent) {        return ࡠ.ԭ().Ϳ(intent);    }    public void setDumpDex(boolean z) {        ࡠ.ԭ().getClass();    }    public void setEnableIoRedirect(boolean z) {        ࡠ.ԭ().getClass();    }    public void setEnabledEmbedClassMaker(boolean z) {        ࡠ.ԭ().getClass();    }    public void setInternalAppEnhancement(boolean z) {        ࡠ.ԭ().getClass();    }    public void setNetFilterRules(String str) {        ࡠ.ԭ().getClass();    }    public void setUnityGamingMode(boolean z) {        ࡠ.ԭ().getClass();    }    public String uninstallAppFully(String str) {        return ࡠ.ԭ().Ԩ(str);    }    public void waitForBackgroundScanner() {        ࡠ.ԭ().֏();    }    public void cleanPackageDataAsUser(String str, String str2) {        ࡠ.ԭ().Ԩ(str, str2);    }    public void createEmptyUser(String str, String str2) {        ࡠ.ԭ().Ϳ(str, str2);    }    public ActivityInfo resolveActivityInfo(Intent intent, int i) {        ActivityInfo activityInfo;        if (intent.getComponent() != null) {            return resolveActivityInfo(intent.getComponent(), i);        }        ResolveInfo resolveInfo = (ResolveInfo) ࡠ.ԭ().Ϳ(intent, (String) null, 131072).get(0);        if (resolveInfo == null || (activityInfo = resolveInfo.activityInfo) == null) {            return null;        }        intent.setClassName(activityInfo.packageName, activityInfo.name);        return activityInfo;    }}